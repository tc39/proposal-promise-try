<!doctype html>
<meta charset="utf8">
<pre class="metadata">
title: Promise.try
stage: 3
contributors: Jordan Harband
</pre>

<emu-clause id="sec-promise.try">
	<h1>Promise.try ( _callbackfn_, ..._args_ )</h1>
	<p>When the `try` method is called with argument _callbackfn_, the following steps are taken:</p>
	<emu-alg>
		1. Let _C_ be the *this* value.
		1. If _C_ is not an Object, throw a *TypeError* exception.
		1. Let _promiseCapability_ be ? NewPromiseCapability(_C_).
		1. Let _status_ be Completion(Call(_callbackfn_, *undefined*, _args_)).
		1. If _status_ is an abrupt completion, then
			1. Perform ? Call(_promiseCapability_.[[Reject]], *undefined*, « _status_.[[Value]] »).
		1. Else,
			1. Perform ? Call(_promiseCapability_.[[Resolve]], *undefined*, « _status_.[[Value]] »).
		1. Return _promiseCapability_.[[Promise]].
	</emu-alg>
	<emu-note>
		<p>This function expects its *this* value to be a constructor function that supports the parameter conventions of the Promise constructor.</p>
	</emu-note>
</emu-clause>
